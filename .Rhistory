source('~/Documents/GitHub/KinemaR/KinemaR.R')
source('~/Documents/GitHub/KinemaR/KinemaR.R')
MessageChooseDataDir="Choose the folder containing the Kinematic Data TXT Files."
InputDirPath<-tk_choose.dir(default="", caption=MessageChooseDataDir) # Prompt the user to select an inputdirectory
InputDirName<-basename(InputDirPath) # Defines Name of Input directory
ListInputFilePath<-list.files(path=InputDirPath, pattern=".txt", all.files=FALSE, full.names=TRUE, ignore.case = TRUE) # Get the list of TXT filepath within InputDir
ListInputFilePath
FileI
FileI=1
InputFilePathI <- ListInputFilePath[FileI] # Defines the Path of the File to be processed
InputFilenameI <- basename(InputFilePathI) # Get the Filename of the File being processed
InputFilenameINoExt <- gsub(".txt","", InputFilenameI,ignore.case = TRUE) # Create a filename without extension
InputFilenameINoExt
MessageFilenameError<-paste0("Sorry, ",InputFilenameI, "\ndoes not match KinemaR TXT file name specification.")
if(length(unlist(strsplit(InputFilenameINoExt, "_")))<2){
MessageFilenameError<-paste0("Sorry, ",InputFilenameI, "\ndoes not match KinemaR TXT file name specification.")
MessageFilenameErrorFix<-paste0("Please, ensure that the name of TXT files include at least 1 underscore (Example: \"Date_Subject.txt\").")
tk_messageBox(type = "ok", message=paste0(MessageFilenameError,"\n",MessageFilenameErrorFix), caption = "KinemaR Information", icon="warning")
MessageStop<-"Sorry, KinemaR has stopped.\n"
stop(paste0(MessageStop,"\n", MessageFilenameError,"\n", MessageFilenameErrorFix))
} # Check that Filenames have at least 1 underscore
InputDataI <- read.table(InputFilePathI, sep = ",", fill = TRUE, header = TRUE,comment.char = "", nrows = 100000)
InputDataI <- InputDataI[,-seq(4,dim(InputDataI)[2],3)] # remove flag columns
InputDataI <- read.table(InputFilePathI, sep = ",", fill = TRUE, header = TRUE,comment.char = "", nrows = 100000)
InputDataI
source('~/Documents/GitHub/KinemaR/KinemaR.R')
